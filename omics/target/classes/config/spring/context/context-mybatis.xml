<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:util="http://www.springframework.org/schema/util"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
        http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.1.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd">

	<bean id="omics-sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean"
		p:mapperLocations="classpath*:org/kobic/omics/sql/map/*_map.xml"
		p:configLocation="classpath:config/spring/context/mybatis-config-base.xml"
		p:dataSource-ref="dataSourceSpied-omics">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<bean id="closha-sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean"
		p:mapperLocations="classpath*:org/kobic/closha/sql/map/*_map.xml"
		p:configLocation="classpath:config/spring/context/mybatis-config-base.xml"
		p:dataSource-ref="dataSourceSpied-closha">
		<property name="dataSource" ref="dataSource2" />
	</bean>

	<!-- scan for mappers and let them be autowired -->
	<bean id="omicsScanner" class="org.mybatis.spring.mapper.MapperScannerConfigurer"
		p:basePackage="org.kobic.omics" p:sqlSessionFactoryBeanName="omics-sqlSessionFactory" />

	<bean id="closhaScanner" class="org.mybatis.spring.mapper.MapperScannerConfigurer"
		p:basePackage="org.kobic.closha" p:sqlSessionFactoryBeanName="closha-sqlSessionFactory" />
</beans>